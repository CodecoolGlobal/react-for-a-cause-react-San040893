[{"/home/weeselburger/Dokumente/CodeCool/VieWebCurriculum/TW3/projekt-mit-bootstrap/src/index.js":"1","/home/weeselburger/Dokumente/CodeCool/VieWebCurriculum/TW3/projekt-mit-bootstrap/src/App.js":"2","/home/weeselburger/Dokumente/CodeCool/VieWebCurriculum/TW3/projekt-mit-bootstrap/src/reportWebVitals.js":"3","/home/weeselburger/Dokumente/CodeCool/VieWebCurriculum/TW3/projekt-mit-bootstrap/src/components/NavBar.js":"4","/home/weeselburger/Dokumente/CodeCool/VieWebCurriculum/TW3/projekt-mit-bootstrap/src/components/Banner.js":"5"},{"size":535,"mtime":1677058113990,"results":"6","hashOfConfig":"7"},{"size":314,"mtime":1677064814918,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1677058113990,"results":"9","hashOfConfig":"7"},{"size":2815,"mtime":1677062722715,"results":"10","hashOfConfig":"7"},{"size":2385,"mtime":1677066170937,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"1ghheve",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"15"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/weeselburger/Dokumente/CodeCool/VieWebCurriculum/TW3/projekt-mit-bootstrap/src/index.js",[],[],[],"/home/weeselburger/Dokumente/CodeCool/VieWebCurriculum/TW3/projekt-mit-bootstrap/src/App.js",["29"],[],"/home/weeselburger/Dokumente/CodeCool/VieWebCurriculum/TW3/projekt-mit-bootstrap/src/reportWebVitals.js",[],[],"/home/weeselburger/Dokumente/CodeCool/VieWebCurriculum/TW3/projekt-mit-bootstrap/src/components/NavBar.js",["30","31","32"],[],"import { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport { Navbar, Container , Nav} from \"react-bootstrap\";\nimport logo from \"../assets/img/logo.svg\";\nimport navIcon1 from \"../assets/img/nav-icon1.svg\";\nimport navIcon2 from \"../assets/img/nav-icon2.svg\";\nimport navIcon3 from \"../assets/img/nav-icon3.svg\";\n\nexport  function NavBar() {\n  const [activeLink, setActiveLink] = useState(\"home\");\n  const [scrolled, seScrolled] = useState(false);\n\n  useEffect(() => {\n    const onScroll = () => {\n      if (window.scrollY > 50) {\n        seScrolled(true);\n      } else {\n        seScrolled(false);\n      }\n    };\n    window.addEventListener(\"scroll\", onScroll);\n\n    return () => window.removeEventListener(\"scroll\", onScroll);\n  });\n\n  const onUpdateActiveLink = (value) => {\n    setActiveLink(value);\n  };\n  return (\n    <Navbar expand=\"lg\" className={scrolled ? \"scrolled\" : \"\"}>\n      <Container>\n        <Navbar.Brand href=\"#home\">\n          <img src={logo} alt=\"Logo\" />\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </Navbar.Toggle>\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"me-auto\">\n            {/* Hier setzen wir die aktivit√§ten */}\n            <Nav.Link\n              href=\"#home\"\n              className={\n                activeLink === \"home\" ? \"active nav-bar-link\" : \"navbar-link\"\n              }\n              onClick={() => onUpdateActiveLink(\"home\")}\n            >\n              Home\n            </Nav.Link>\n            <Nav.Link\n              href=\"#skills\"\n              className={\n                activeLink === \"skills\" ? \"active nav-bar-link\" : \"navbar-link\"\n              }\n              onClick={() => onUpdateActiveLink(\"home\")}\n            >\n              Skills\n            </Nav.Link>\n            <Nav.Link\n              href=\"#projects\"\n              className={\n                activeLink === \"projects\"\n                  ? \"active nav-bar-link\"\n                  : \"navbar-link\"\n              }\n              onClick={() => onUpdateActiveLink(\"home\")}\n            >\n              Projects\n            </Nav.Link>\n          </Nav>\n          <span className=\"navbar-text\">\n            <div className=\"social-icon\">\n              <a href=\"#\">\n                <img src={navIcon1} alt=\"\" />\n              </a>\n              <a href=\"#\">\n                <img src={navIcon2} alt=\"\" />\n              </a>\n              <a href=\"#\">\n                <img src={navIcon3} alt=\"\" />\n              </a>\n            </div>\n            <button className=\"vvd\" onClick={() => console.log(\"connect\")}>\n              <span>Let's Connect</span>\n            </button>\n          </span>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n","/home/weeselburger/Dokumente/CodeCool/VieWebCurriculum/TW3/projekt-mit-bootstrap/src/components/Banner.js",["33"],[],{"ruleId":"34","severity":1,"message":"35","line":1,"column":8,"nodeType":"36","messageId":"37","endLine":1,"endColumn":12},{"ruleId":"38","severity":1,"message":"39","line":73,"column":15,"nodeType":"40","endLine":73,"endColumn":27},{"ruleId":"38","severity":1,"message":"39","line":76,"column":15,"nodeType":"40","endLine":76,"endColumn":27},{"ruleId":"38","severity":1,"message":"39","line":79,"column":15,"nodeType":"40","endLine":79,"endColumn":27},{"ruleId":"41","severity":1,"message":"42","line":25,"column":6,"nodeType":"43","endLine":25,"endColumn":12,"suggestions":"44"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'delta' and 'tick'. Either include them or remove the dependency array.","ArrayExpression",["45"],{"desc":"46","fix":"47"},"Update the dependencies array to be: [delta, text, tick]",{"range":"48","text":"49"},[717,723],"[delta, text, tick]"]